[app]

# (str) Title of your app
title = Language Memory Game

# (str) Package name
package.name = languagememory

# (str) Package domain (needed for android/ios packaging)
package.domain = org.test

# (list) Source files to include (let empty to include all the files)
source.include_exts = py,png,jpg,kv,atlas,json

# (list) Source files to exclude (let empty to not exclude anything)
source.exclude_exts = spec

# (list) List of directory to exclude (let empty to not exclude anything)
source.exclude_dirs = tests, bin

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

# (list) List of source files to include (let empty to include all the files)
source.include_files = GOGO.json

# (list) List of directory to include (let empty to include all the files)
source.include_dir = .

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

[requirements]

# (str) Requirements
python3,kivy

[buildozer]

# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))
log_level = 2

# (int) Display warning if buildozer is run as root (0 = False, 1 = True)
warn_on_root = 1

# (str) Path to build artifact storage, absolute or relative to spec file
# build_dir = ./.buildozer

# (str) Path to build output (i.e. .apk creation)
# bin_dir = ./bin

# (str) Path to your custom icon (must be a 512x512 png image)
# icon.filename = %(source.dir)s/data/icon.png

# (list) List as strings of your requirements (must be already installed)
requirements = python3,kivy

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (list) List of source files to include (let empty to include all the files)
source.include_exts = py,png,jpg,kv,atlas,json

# (list) List of directory to exclude (let empty to not exclude anything)
source.exclude_dirs = tests, bin

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

# (list) List of source files to include (let empty to include all the files)
source.include_files = GOGO.json

# (list) List of directory to include (let empty to include all the files)
source.include_dir = .

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

[buildozer]

# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))
log_level = 2

# (int) Display warning if buildozer is run as root (0 = False, 1 = True)
warn_on_root = 1

# (str) Path to build artifact storage, absolute or relative to spec file
# build_dir = ./.buildozer

# (str) Path to build output (i.e. .apk creation)
# bin_dir = ./bin

# (str) Path to your custom icon (must be a 512x512 png image)
# icon.filename = %(source.dir)s/data/icon.png

# (list) List as strings of your requirements (must be already installed)
requirements = python3,kivy

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (list) List of source files to include (let empty to include all the files)
source.include_exts = py,png,jpg,kv,atlas,json

# (list) List of directory to exclude (let empty to not exclude anything)
source.exclude_dirs = tests, bin

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

# (list) List of source files to include (let empty to include all the files)
source.include_files = GOGO.json

# (list) List of directory to include (let empty to include all the files)
source.include_dir = .

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

[buildozer]

# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))
log_level = 2

# (int) Display warning if buildozer is run as root (0 = False, 1 = True)
warn_on_root = 1

# (str) Path to build artifact storage, absolute or relative to spec file
# build_dir = ./.buildozer

# (str) Path to build output (i.e. .apk creation)
# bin_dir = ./bin

# (str) Path to your custom icon (must be a 512x512 png image)
# icon.filename = %(source.dir)s/data/icon.png

# (list) List as strings of your requirements (must be already installed)
requirements = python3,kivy

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (list) List of source files to include (let empty to include all the files)
source.include_exts = py,png,jpg,kv,atlas,json

# (list) List of directory to exclude (let empty to not exclude anything)
source.exclude_dirs = tests, bin

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v8a, x86, x86_64
android.archs = armeabi-v7l arm64-v8a

# (list) Permissions
android.permissions = INTERNET

# (int) Android min screen size
android.min_screen_size = 0

# (int) Android max screen size
android.max_screen_size = 0

# (int) Android screen orientation
android.screen_orientation = 0

# (list) List of source files to include (let empty to include all the files)
source.include_files = GOGO.json

# (list) List of directory to include (let empty to include all the files)
source.include_dir = .

# (list) List of exclusions using pattern matching
source.exclude_patterns = license,images/*/*.jpg

# (str) Icon of the application
icon.filename = %(source.dir)s/data/icon.png

# (str) Supported android version
android.version = 1

# (int) Android API to use
android.api = 30

# (int) Android min API to use
android.minapi = 21

# (int) Android SDK version to use
android.sdk = 24

# (str) Android NDK version to use
android.ndk = 19c

# (str) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi
android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
android.private_storage = True

# (str) Android logcat filters to use
android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
android.copy_libs = 1

# (str) The Android archs to build for, choices: armeabi-v7l, arm64-v
